package com.cnmobi.exianmall.base;import java.util.ArrayList;import java.util.Calendar;import java.util.Date;import java.util.HashSet;import java.util.Iterator;import java.util.List;import java.util.Map;import com.cnmobi.exianmall.bean.MessageBean;import com.cnmobi.exianmall.bean.ShopCarCommodity;import com.cnmobi.exianmall.bean.ShopCarsBean;import com.google.gson.Gson;import com.lidroid.xutils.util.LogUtils;import com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;import com.nostra13.universalimageloader.core.assist.QueueProcessingType;import android.R.bool;import android.app.Application;import android.content.Context;import android.content.SharedPreferences;import android.content.SharedPreferences.Editor;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;public class MyApplication extends Application{		private String creationtime;	private String deliveryaddress;	private String examine;	private int idNumber;	private String inst_no;	private String islock;	private String lst_modify_date;	private String lst_modify_tlr;	private String lst_pwd_date;	private String phone;	private String stallsname;	private String tlr_name;	private String tlr_pwd;	private String tlr_type;	private String userlogo;		private String isSetpassword;		private String idStore;		private String balance;		private String toKen;		private List<MessageBean> message;	public List<MessageBean> getMessage() {		return message;	}	public void setMessage(List<MessageBean> message) {		this.message = message;	}	public String getToKen() {		return toKen;	}	public void setToKen(String toKen) {		this.toKen = toKen;	}	public String getBalance() {		return balance;	}	public void setBalance(String balance) {		this.balance = balance;	}//	private List<ShopCarCommodity> shopCarCommodities=new ArrayList<ShopCarCommodity>();//购物车商品	private List<ShopCarsBean> shopCarCommodities=new ArrayList<ShopCarsBean>();//购物车商品//	public List<ShopCarCommodity> getShopCarCommodities() {//		return shopCarCommodities;//	}////	public void setShopCarCommodities(List<ShopCarCommodity> shopCarCommodities) {//		this.shopCarCommodities = shopCarCommodities;//	}		private static MyApplication app; 			public List<ShopCarsBean> getShopCarCommodities() {		return shopCarCommodities;	}	public void setShopCarCommodities(List<ShopCarsBean> shopCarCommodities) {		this.shopCarCommodities = shopCarCommodities;	}	private List<Integer> shopid=new ArrayList<Integer>();//购物车订单所有ID		public List<Integer> getShopid() {		return shopid;	}	public void setShopid(List<Integer> shopid) {		this.shopid = shopid;	}	public void setCreationtime(String creationtime) {		this.creationtime = creationtime;	}	public String getCreationtime() {		return this.creationtime;	}	public void setDeliveryaddress(String deliveryaddress) {		this.deliveryaddress = deliveryaddress;	}	public String getDeliveryaddress() {		return this.deliveryaddress;	}	public void setExamine(String examine) {		this.examine = examine;	}	public String getExamine() {		return this.examine;	}	public void setIdNumber(int idNumber) {		this.idNumber = idNumber;	}	public int getIdNumber() {		return this.idNumber;	}	public void setInst_no(String inst_no) {		this.inst_no = inst_no;	}	public String getInst_no() {		return this.inst_no;	}	public void setIslock(String islock) {		this.islock = islock;	}	public String getIslock() {		return this.islock;	}	public void setLst_modify_date(String lst_modify_date) {		this.lst_modify_date = lst_modify_date;	}	public String getLst_modify_date() {		return this.lst_modify_date;	}	public void setLst_modify_tlr(String lst_modify_tlr) {		this.lst_modify_tlr = lst_modify_tlr;	}	public String getLst_modify_tlr() {		return this.lst_modify_tlr;	}	public void setLst_pwd_date(String lst_pwd_date) {		this.lst_pwd_date = lst_pwd_date;	}	public String getLst_pwd_date() {		return this.lst_pwd_date;	}	public void setPhone(String phone) {		this.phone = phone;	}	public String getPhone() {		return this.phone;	}	public void setStallsname(String stallsname) {		this.stallsname = stallsname;	}	public String getStallsname() {		return this.stallsname;	}	public void setTlr_name(String tlr_name) {		this.tlr_name = tlr_name;	}	public String getTlr_name() {		return this.tlr_name;	}	public void setTlr_pwd(String tlr_pwd) {		this.tlr_pwd = tlr_pwd;	}	public String getTlr_pwd() {		return this.tlr_pwd;	}	public void setTlr_type(String tlr_type) {		this.tlr_type = tlr_type;	}	public String getTlr_type() {		return this.tlr_type;	}	public void setUserlogo(String userlogo) {		this.userlogo = userlogo;	}	public String getUserlogo() {		return this.userlogo;	}	public String getIsSetpassword() {		return isSetpassword;	}	public void setIsSetpassword(String isSetpassword) {		this.isSetpassword = isSetpassword;	}			public String getIdStore() {		return idStore;	}	public void setIdStore(String idStore) {		this.idStore = idStore;	}	public static MyApplication getApp() {		return app;	}	public static void setApp(MyApplication app) {		MyApplication.app = app;	}		public static MyApplication getInstance() {          return app;      }		public static ImageLoader imageLoader = ImageLoader.getInstance();	public static DisplayImageOptions options;	public static Map<String, Long> map; // 用于自定义TimeButton	//滑动控件是否以滑动 防止滑动冲突	public static boolean isSwipeListViewSlide = false;	//是否为购物车页面 防止滑动冲突	public static boolean isOnShopCar = false;	public static boolean isUpdateDialogShowed=false;	//版本更新提示是否显示过	@Override	public void onCreate() {		super.onCreate();		setApp(this);		initImageLoader(this);	}		public static void initImageLoader(Context context) {		ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(				context).threadPriority(Thread.NORM_PRIORITY - 2)				.denyCacheImageMultipleSizesInMemory()				.discCacheFileNameGenerator(new Md5FileNameGenerator())				.tasksProcessingOrder(QueueProcessingType.LIFO) // Not				.build();		// Initialize ImageLoader with configuration.		ImageLoader.getInstance().init(config);		// imageLoader.init(ImageLoaderConfiguration.createDefault(context));	}		/**	  * 替换指定字符串	  * startIndex要替换字符串的开始位置	  * endIndex要替换字符串的结束位置	  * res原字符串	  * str替换字符串	  * @return	  */	public static String replaceIndex(int startIndex, int endIndex, String res, String str) {		for (int i = startIndex - 1; i < endIndex; i++) {			res = res.substring(0, i) + str + res.substring(i + 1);		}		return res;	}		/**	 * 商品是否已在购物车	 * 	 * @return	 */	public static boolean isInShopCar(int idCommodity, int idLevel) {		boolean resutl = false;		for (int i = 0; i < MyApplication.getInstance().getShopCarCommodities().size(); i++) {			if (idCommodity == MyApplication.getInstance().getShopCarCommodities().get(i).getIdCommodity()				&& idLevel == MyApplication.getInstance().getShopCarCommodities().get(i).getIdLevel()) {				resutl = true;				break;			}		}		return resutl;	}		/**	 * 消息是否有未读	 */	public boolean isReadedMessage(){		boolean resutl = false;		if(MyApplication.getInstance().getMessage()!=null){			for(int i=0;i<MyApplication.getInstance().getMessage().size();i++){				if(!"Y".equals(MyApplication.getInstance().getMessage().get(i).getIsRead())){					resutl=true;					break;				}			}		}		return resutl;	}		//	/**//	 * 所有系统消息是否有未读//	 *///	public  boolean isReadedSysMessage(){//		boolean result=false;//		SharedPreferences sharedPreferences = getSharedPreferences("sysIdMessage",//				Context.MODE_WORLD_READABLE + Context.MODE_WORLD_WRITEABLE);//		HashSet<String> hash=new HashSet<String>();//		Iterator it;//		String str="";//		for(int i=0;i<MyApplication.getInstance().getMessage().size();i++){//			if("0".equals(MyApplication.getInstance().getMessage().get(i).getMsgtype())||"1".equals(MyApplication.getInstance().getMessage().get(i).getMsgtype())){//				it=sharedPreferences.getStringSet("idMessage", new HashSet<String>()).iterator();//				while (it.hasNext()) {//					str=(String) it.next();//					//根据系统消息id和sp的set里的元素判断//					if(!str.equals(MyApplication.getInstance().getMessage().get(i).getIdMessage()+"")){//						//sp没有该id说明有未读//						result=true;//						LogUtils.e("不相同的系统消息id"+MyApplication.getInstance().getMessage().get(i).getIdMessage());//					}//					//				}//			}//		}//		return result;//	}	public int getVersionCode() throws Exception{     		   //获取packagemanager的实例       	  PackageManager packageManager = getPackageManager();     		    //getPackageName()是你当前类的包名，0代表是获取版本信息      		    PackageInfo packInfo = packageManager.getPackageInfo(getPackageName(), 0);     	    return packInfo.versionCode;      	} 	}