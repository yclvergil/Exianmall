package com.cnmobi.exianmall.adapter;import android.content.Context;import android.graphics.Bitmap;import android.util.SparseArray;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup.LayoutParams;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import com.cnmobi.exianmall.base.MyConst;import com.cnmobi.exianmall.interfaces.OnAddCarItemClickListener;import com.lidroid.xutils.BitmapUtils;/** * 通用 ViewHolder 缓存类 *  * @author pengpeng *  */public class ViewHolder {	private BitmapUtils bitmapUtils;	private final SparseArray<View> mViews;	private int mPosition;	private View mConvertView;	private ViewHolder(Context context, ViewGroup parent, int layoutId,			int position) {		this.mPosition = position;		this.mViews = new SparseArray<View>();		bitmapUtils = new BitmapUtils(context);		mConvertView = LayoutInflater.from(context).inflate(layoutId, parent,				false);		mConvertView.setTag(this); // setTag	}	/**	 * 拿到一个ViewHolder对象	 * 	 * @param context	 * @param convertView	 * @param parent	 * @param layoutId	 * @param position	 * @return	 */	public static ViewHolder get(Context context, View convertView,			ViewGroup parent, int layoutId, int position) {		if (convertView == null) {			// 创建ViewHolder对象 ,并做View缓存			return new ViewHolder(context, parent, layoutId, position);		}		return (ViewHolder) convertView.getTag();	}	public View getConvertView() {		return mConvertView;	}	/**	 * 通过控件的Id获取对于的控件，如果没有则加入views	 * 	 * @param viewId	 * @return	 */	public <T extends View> T getView(int viewId) {		View view = mViews.get(viewId);		if (view == null) {			view = mConvertView.findViewById(viewId);			mViews.put(viewId, view);		}		return (T) view;	}	/**	 * 为TextView设置字符串	 * 	 * @param viewId	 * @param text	 * @return	 */	public ViewHolder setText(int viewId, String text) {		TextView view = getView(viewId);		view.setText(text);		return this;	}			/**	 * 设置控件高度	 */	public ViewHolder setHeight(int viewId, int height) {		View view=getView(viewId);		LayoutParams params=view.getLayoutParams();		params.height=height;		view.setLayoutParams(params);		return this;	}	/**	 * 为ImageView设置图片 setImageResource	 * 	 * @param viewId	 * @param drawableId	 * @return	 */	public ViewHolder setImageResource(int viewId, int drawableId) {		ImageView view = getView(viewId);		view.setImageResource(drawableId);		return this;	}	/**	 * 为ImageView设置图片 setImageBitmap	 * 	 * @param viewId	 * @param drawableId	 * @return	 */	public ViewHolder setImageBitmap(int viewId, Bitmap bm) {		ImageView view = getView(viewId);		view.setImageBitmap(bm);		return this;	}//	/**//	 * 设置网络照片//	 * @param viewId//	 * @param url//	 * @return//	 *///	public ViewHolder setImg(int viewId, String url) {//		ImageView imageView = getView(viewId);//		bitmapUtils.display(imageView, url);//		return this;//	}		/**	 * 设置网络照片	 * @param viewId	 * @param url	 * @return	 */	public ViewHolder setImgImageLoder(int viewId, String url) {		ImageView imageView = getView(viewId);		bitmapUtils.display(imageView, url);		MyConst.imageLoader.displayImage(url, imageView,				MyConst.IM_IMAGE_OPTIONS);		return this;	}	public int getPosition() {		return mPosition;	}		public ViewHolder setAddCarOnClickListener( int viewId,final OnAddCarItemClickListener listener){		final View view=getView(viewId);		view.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {				if(listener!=null){					listener.addCarItemClick(view, getPosition());				}			}		});		return this;	}		}